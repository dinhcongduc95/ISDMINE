@using Kendo.Mvc.UI
@model WebApplication1.Models.Test

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Test</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.TestId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="LessionName">Lession</label>
            <div class="col-md-10">
                @(Html.Kendo().AutoComplete()
                      .Name("LessionName")
                      .Value(Model.Lession != null ? Model.Lession.Name : "")
                      .DataTextField("Name")
                      .Suggest(true)
                      .MinLength(0)
                      .DataSource(source =>
                      {
                          source.Read(read => { read.Action("GetLessions", "Tests").Data("onAdditionalData"); })
                              .ServerFiltering(true);
                      }))
                @Html.ValidationMessageFor(model => model.Lession, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.XmlContent, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.XmlContent, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.XmlContent, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeLimit, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeLimit, new {htmlAttributes = new {@class = "k-textbox"}})
                @Html.ValidationMessageFor(model => model.TimeLimit, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PassMark, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PassMark, new {htmlAttributes = new {@class = "k-textbox"}})
                @Html.ValidationMessageFor(model => model.PassMark, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>


    function onAdditionalData() {
        return {
            text: $("#LessionName").val()
        };
    }

    CKEDITOR.replace('XmlContent');

</script>

